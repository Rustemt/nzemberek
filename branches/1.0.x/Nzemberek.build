<?xml version="1.0" encoding="utf-8" ?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Zemberek Doğal Dil İşleme Kütüphanesi.
   -
   - The Initial Developer of the Original Code is
   - Ahmet A. Akın, Mehmet D. Akın.
   - Portions created by the Initial Developer are Copyright (C) 2006
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -  Mert Derman
   -  Tankut Tekeli
   - ***** END LICENSE BLOCK ***** -->

<project name="NZemberek" default="copyfiles" xmlns="http://nant.sourceforge.net/release/0.85/nant.xsd">
  
  <property name="filename" value="NZemberek"/>

  <!-- "net" veya "mono" değerleri kullanilabilir -->
  <property name="target.framework" value="net"/>
  <property name="nant.settings.currentframework" value="${target.framework}-2.0"/>
  <property name="log4net.dll.name" value="log4net-${nant.settings.currentframework}.dll"/>
  
  
  <property name="testdir"  value="tests"/>
	<property name= "binaryDir" 	value= "dagitim" />
	<property name= "thirdPartyLib" value= "lib" />
  <property name= "unitTestDir"	value= "${testdir}\bin" />
  <property name= "reportsDir" 	value= "${testdir}\reports" />
  
  <property name= "solution.debug" value="false"  />
	
	<assemblyfileset id ="refs">
		<include name="${thirdPartyLib}/nunit.framework.dll" />
		<include name="${thirdPartyLib}/Iesi.Collections.dll" />
		<include name="${thirdPartyLib}/Iesi.Collections.Generic.dll" />
    <include name="${thirdPartyLib}/${log4net.dll.name}" />
	</assemblyfileset>

  <target name="copyfiles" depends="releasebuild">
    <mkdir dir="${binaryDir}/kaynaklar/tr/bilgi"  />
    <copy flatten="false" todir="${binaryDir}/kaynaklar/tr/bilgi">
      <fileset basedir="kaynaklar/tr/bilgi">
        <include name="ek_tr.xml" />
        <include name="kokler_tr.bin" />
        <include name="harf_tr.txt" />
      </fileset>
    </copy>
    <copy flatten="true" todir="${binaryDir}">
      <fileset>
        <include name="${thirdPartyLib}/Iesi.Collections.dll" />
        <include name="${thirdPartyLib}/Iesi.Collections.Generic.dll" />
        <include name="app.config" />
      </fileset>
    </copy>
    <copy file="${thirdPartyLib}/${log4net.dll.name}" tofile="${binaryDir}/log4net.dll"/>
  </target>

  <target name="releasebuild" depends="runtests">
    <csc target="library" debug="${solution.debug}" define="${target.framework}"  output="${binaryDir}/${filename}.dll">
      <sources>
        <include name="**/*.cs"/>
        <exclude name="tests/**"/>
      </sources>
      <references refid="refs"/>
    </csc>
  </target>

  <target name="runtests" verbose="true" depends="nunitbuild">
    <nunit2 failonerror="true">
      <formatter type="Xml" usefile="true"  extension=".xml" outputdir="${reportsDir}" />
      <test assemblyname="${unitTestDir}/${filename}.dll" />
    </nunit2>
  </target>

  <target name="nunitbuild" verbose="true" depends="prepForTests">
    <copy flatten="true" todir="${unitTestDir}">
      <fileset>
        <include name="${thirdPartyLib}/Iesi.Collections.dll" />
        <include name="${thirdPartyLib}/Iesi.Collections.Generic.dll" />
        <include name="${thirdPartyLib}/nunit.framework.dll" />
      </fileset>
    </copy>
    <copy file="${thirdPartyLib}/${log4net.dll.name}" tofile="${unitTestDir}/log4net.dll"/>
    <csc target="library" debug="true" define="${target.framework}" output="${unitTestDir}/${filename}.dll">
      <sources>
        <include name="**/*.cs"/>
      </sources>
      <references refid="refs"/>
    </csc>
  </target>

  <target name="prepForTests" depends="clean">
    <mkdir dir="${unitTestDir}/kaynaklar/tr/bilgi"  />
    <mkdir dir="${unitTestDir}/kaynaklar/tr/test"  />
    <copy flatten="false" todir="${unitTestDir}/kaynaklar/tr/bilgi">
      <fileset basedir="kaynaklar/tr/bilgi">
        <include name="*.*" />
      </fileset>
    </copy>
    <copy flatten="false" todir="${unitTestDir}/kaynaklar/tr/test">
      <fileset basedir="kaynaklar/tr/test">
        <include name="*.txt" />
        <include name="*.properties" />
      </fileset>
    </copy>
    <copy file="${testdir}/app.config" tofile="${unitTestDir}/Nzemberek.dll.config" />
    <copy file="app.config" tofile="${unitTestDir}/app.config" />
  </target>

  <target name="clean" verbose="true" description="cleans the working and test directory">
    <delete failonerror="false">
      <fileset>
        <include name="${binaryDir}/**"/>
        <include name="${unitTestDir}/**"/>
        <include name="${reportsDir}/**"/>
      </fileset>
    </delete>
    <mkdir dir="${binaryDir}/" failonerror="true" unless="${directory::exists(&apos;${binaryDir}/&apos;)}"/>
    <mkdir dir="${unitTestDir}/" failonerror="true" unless="${directory::exists(&apos;${unitTestDir}/&apos;)}"/>
    <mkdir dir="${reportsDir}/" failonerror="true" unless="${directory::exists(&apos;${reportsDir}/&apos;)}"/>
  </target>
</project>